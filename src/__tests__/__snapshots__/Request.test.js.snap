// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Request should render with loaded props 1`] = `
<SceneWrapper
  background="header"
  hasTabs={false}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "marginBottom": 14.045774647887324,
      }
    }
  >
    <ExchangeRate
      primaryInfo={Object {}}
      secondaryDisplayAmount={Object {}}
      secondaryInfo={Object {}}
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "flex-start",
      }
    }
  >
    <ExchangedFlipInput
      color="#FFFFFF"
      exchangeSecondaryToPrimaryRatio={Object {}}
      forceUpdateGuiCounter={0}
      headerText="Receive to undefined"
      inputAccessoryViewID=""
      isEditable={true}
      isFiatOnTop={true}
      isFocus={false}
      keyboardVisible={false}
      onExchangeAmountChanged={[Function]}
      onNext={[Function]}
      overridePrimaryExchangeAmount=""
      primaryCurrencyInfo={Object {}}
      secondaryCurrencyInfo={Object {}}
      topReturnKeyType="done"
    />
    <InputAccessoryView
      backgroundColor="rgba(255, 255, 255, 0.5)"
      nativeID="cancelHeaderId"
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <ForwardRef
          onPress={[Function]}
          style={
            Object {
              "paddingHorizontal": 21.068661971830984,
              "paddingVertical": 9.832042253521127,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#0073D9",
                "fontSize": 22.473239436619718,
              }
            }
          >
            
          </Text>
        </ForwardRef>
        <ForwardRef
          onPress={[Function]}
          style={
            Object {
              "paddingHorizontal": 21.068661971830984,
              "paddingVertical": 9.832042253521127,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#0073D9",
                "fontSize": 22.473239436619718,
              }
            }
          >
            Done
          </Text>
        </ForwardRef>
      </View>
    </InputAccessoryView>
    <View
      style={
        Object {
          "backgroundColor": "white",
          "borderRadius": 5.618309859154929,
          "marginTop": 21.068661971830984,
          "padding": 5.618309859154929,
        }
      }
    >
      <QrCode
        data=""
        size={333.5}
      />
    </View>
    <RequestStatus
      addressExplorer={null}
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
  >
    <ShareButtons
      copyToClipboard={[Function]}
      fioAddressModal={[Function]}
      shareViaShare={[Function]}
    />
  </View>
</SceneWrapper>
`;

exports[`Request should render with loading props 1`] = `
<ActivityIndicator
  animating={true}
  color="#999999"
  hidesWhenStopped={true}
  size="large"
  style={
    Object {
      "alignSelf": "center",
      "flex": 1,
    }
  }
/>
`;
